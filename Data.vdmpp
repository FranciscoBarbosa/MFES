class Data
types
-- TODO Define types here

values
-- TODO Define values here

instance variables
		private ano: nat;
		private mes: nat;
		private dia: nat;
					
		--inv  mes <= 12 and dia <= diasDoMes(ano, mes);
		
-- TODO Define instance variables here
operations
		public Data: nat * nat * nat ==> Data
					 Data(dia0, mes0, ano0) == (
					 			dia := dia0;
					 			mes := mes0;
					 			ano := ano0;
					 );
		
		public maisTarde: Data ==> bool
					 maisTarde(data) == (
					 	if ano > data.ano then return true;
					 	if ano = data.ano and mes > data.mes then return true;
					 	if ano = data.ano and mes = data.mes and dia >= data.dia then return true;
					 	return false;
					);
					
		public getDia: () ==> nat
					 getDia() == 
					 		return dia
					 		
					 post RESULT = dia;
					 
		public getMes: () ==> nat
					 getMes() ==
					 		return mes
					 	
					 post RESULT = mes;
					 
		public getAno: () ==> nat
					 getAno() ==
					 		return ano
			
					 post RESULT = ano;
	--	public anoBissexto: nat ==> bool
		--			 anoBissexto(ano) ==
			--		 		if (ano mod 4 = 0 and ano mod 100 <> 0
				--	 		or ano mod 400 = 0)
					-- 		then return true
					 	--	else return false;
		
	
				
		--public diasDoMes: nat * nat ==> nat
			--	 	 diasDoMes(ano0, mes0) == (
				-- 	 		cases mes0 :
					--	 	 		1, 3, 5, 7, 8, 10, 12 -> 31,
						-- 	 		4, 6, 9, 11 -> 30,
						 	-- 		2 -> if anoBissexto(ano0) 
						 	 	--	then 29 else 28
				 	 		-- end
				 	 	-- )	
				 	
				 --	pre mes0 >=1 and mes0 <= 12;
		
					 
-- TODO Define operations here
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Data